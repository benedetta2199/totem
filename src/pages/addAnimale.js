import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import Image from 'next/image'
import { Button, Col, Form, Row } from 'react-bootstrap'
import { useEffect, useState } from 'react';
import { collection, doc, getDocs, setDoc } from 'firebase/firestore';

import db from '@database'

export default function Home() {
  const [animale, setAnimale]=useState('');
  const [famiglia, setFamiglia]=useState('');
  const [alimentazione, setAlimentazione]=useState('');
  const [allAdjP, setAllAdjP] = useState([]);
  const [allAdjN, setAllAdjN] = useState([]);

  const [adjsP, updateAdjP] = useState([]);
  const [adjsN, updateAdjN] = useState([]);

  const addanimale = async () => {
    /**Aggiungere controllo su nome giÃ  inserito o non inserito nulla */
    await setDoc(doc(db,'animale',animale), {famiglia: famiglia, alimentazione: alimentazione, aggettiviP: adjsP.sort(), aggettiviN: adjsN.sort()});
  }

  const getAllAdj = async() =>{
    let pos = [];
    let neg = [];
    const querySnapshot = await getDocs(collection(db, "aggettivo"));
    querySnapshot.forEach((doc) => {
      
      doc.data().positivo 
        ? pos = pos.concat(doc.id)
        : neg = neg.concat(doc.id)
  });
    setAllAdjP(allAdjP => pos);
    setAllAdjN(allAdjN => neg);
  }
  
  const check = (e, positivo) => {
    if(positivo){
      e.target.checked 
      ? updateAdjP(adjsP => [...adjsP, e.target.value]) 
      : updateAdjP(adjsP.filter(item => item !== e.target.value));
    } else{
      e.target.checked 
      ? updateAdjN(adjsN => [...adjsN, e.target.value]) 
      : updateAdjN(adjsN.filter(item => item !== e.target.value));
    }
  }

  useEffect(()=>{
    getAllAdj();
  },[]);

  
  return (
    <>
      <Head>
        <title>Bestiario</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>Aggiungi un animale</h1>
        <Form.Control type="name" className={`w-75 m-auto mt-3`} placeholder='Animale'
        value={animale} onChange={(e) => setAnimale(e.target.value)}/>
       
       <Form.Select aria-label="Scegli la famiglia" className={`w-75 m-auto mt-3`}
          onChange={(e)=>setFamiglia(e.target.value)}>
          <option>Scegli la famiglia</option>
          <option value="Anfibi">Anfibi</option>
          <option value="Invertebrati">Invertebrati</option>
          <option value="Mammiferi">Mammiferi</option>
          <option value="Pesci">Pesci</option>
          <option value="Rettili">Rettili</option>
          <option value="Uccelli">Uccelli</option>
        </Form.Select>

        <Form.Select aria-label="Scegli l'alimentazione" className={`w-75 m-auto mt-3`}
          onChange={(e)=>setAlimentazione(e.target.value)}>
          <option>Scegli l'alimentazione</option>
          <option value="Carnivoro">Carnivoro</option>
          <option value="Erbivoro">Erbivoro</option>
          <option value="Granivoro">Granivoro</option>
          <option value="Insettivoro">Insettivoro</option>
          <option value="Onnivoro">Onnivoro</option>
        </Form.Select>

        <Row className='mt-3 mx-2 px-3'>
          <Col xs={6}>
            <p className='t-khand lightT text-center h6'>Aggettivi positivi</p>
            {allAdjP.map((item) => (
               <Form.Check value={item} label={item} checkbox onChange={(e)=> check(e, true)}/>
            ))}
          </Col>
          <Col xs={6}>
            <p className='t-khand lightT text-center h6'>Aggettivi negativi</p>
            {allAdjN.map((item) => (
               <Form.Check value={item} label={item} checkbox onChange={(e)=> check(e, false)}/>
            ))}
          </Col>
        </Row>

       <Button className='mt-3 mx-5' onClick={()=>{addanimale()}}>Conferma</Button>
        
        {/*<Image
                src="/vercel.svg"
                alt="Vercel Logo"
                className={styles.vercelLogo}
                width={100}
                height={24}
                priority
              />*/}
        
        
      </main>
    </>
  )
}
